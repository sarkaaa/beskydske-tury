# Add date formatting options.
directive @dateformat(formatString: String, locale: String, fromNow: Boolean, difference: String) on FIELD_DEFINITION

# Link to node by foreign-key relation.
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

# Link to File node by relative path.
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

# Proxy resolver from another field.
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

# Infer field types from field values.
directive @infer on OBJECT

# Do not infer field types from field values.
directive @dontInfer on OBJECT

# Define the mime-types handled by this type.
directive @mimeTypes(
  # The mime-types handled by this type.
  types: [String!]! = []
) on OBJECT

# Define parent-child relations between types. This is used to add `child*` and `children*` convenience fields like `childImageSharp`.
directive @childOf(
  # A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin.
  mimeTypes: [String!]! = []

  # A list of types this type is a child of. Usually these are the types handled by a transformer plugin.
  types: [String!]! = []
) on OBJECT

# DEPRECATED: Use interface inheritance instead, i.e. "interface Foo implements Node".
#
# Adds root query fields for an interface. All implementing types must also implement the Node interface.
directive @nodeInterface on INTERFACE

type File implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  url: String

  # Copy file to static directory and return public url to it
  publicURL: String

  # Returns all children nodes filtered by type ImageSharp
  childrenImageSharp: [ImageSharp]

  # Returns the first child node of type ImageSharp or null if there are no children of given type on this node
  childImageSharp: ImageSharp
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# Node Interface
interface Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

# A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
scalar Date

type Directory implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Site implements Node {
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  siteMetadata: SiteSiteMetadata
  port: Int
  host: String
  polyfill: Boolean
  pathPrefix: String
  jsxRuntime: String
  trailingSlash: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SiteSiteMetadata {
  title: String
  description: String
  author: String
}

type SiteFunction implements Node {
  functionRoute: String!
  pluginName: String!
  originalAbsoluteFilePath: String!
  originalRelativeFilePath: String!
  relativeCompiledFilePath: String!
  absoluteCompiledFilePath: String!
  matchPath: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SitePage implements Node {
  path: String!
  component: String!
  internalComponentName: String!
  componentChunkName: String!
  matchPath: String
  pageContext: JSON
  pluginCreator: SitePlugin
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type SitePlugin implements Node {
  resolve: String
  name: String
  version: String
  nodeAPIs: [String]
  browserAPIs: [String]
  ssrAPIs: [String]
  pluginFilepath: String
  pluginOptions: JSON
  packageJson: JSON
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SiteBuildMetadata implements Node {
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

enum GatsbyImageFormat {
  NO_CHANGE
  AUTO
  JPG
  PNG
  WEBP
  AVIF
}

enum GatsbyImageLayout {
  FIXED
  FULL_WIDTH
  CONSTRAINED
}

enum GatsbyImagePlaceholder {
  DOMINANT_COLOR
  TRACED_SVG
  BLURRED
  NONE
}

enum ImageFormat {
  NO_CHANGE
  AUTO
  JPG
  PNG
  WEBP
  AVIF
}

enum ImageFit {
  COVER
  CONTAIN
  FILL
  INSIDE
  OUTSIDE
}

enum ImageLayout {
  FIXED
  FULL_WIDTH
  CONSTRAINED
}

enum ImageCropFocus {
  CENTER
  NORTH
  NORTHEAST
  EAST
  SOUTHEAST
  SOUTH
  SOUTHWEST
  WEST
  NORTHWEST
  ENTROPY
  ATTENTION
}

input DuotoneGradient {
  highlight: String!
  shadow: String!
  opacity: Int
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_WHITE
  TURNPOLICY_LEFT
  TURNPOLICY_RIGHT
  TURNPOLICY_MINORITY
  TURNPOLICY_MAJORITY
}

input Potrace {
  turnPolicy: PotraceTurnPolicy
  turdSize: Float
  alphaMax: Float
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  blackOnWhite: Boolean
  color: String
  background: String
}

type ImageSharp implements Node {
  fixed(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpFixed
  fluid(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    toFormat: ImageFormat = AUTO
    toFormatBase64: ImageFormat = AUTO
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    trim: Float = 0
    sizes: String = ""

    # A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    srcSetBreakpoints: [Int] = []
  ): ImageSharpFluid
  gatsbyImageData(
    # The layout for the image.
    # FIXED: A static image sized, that does not resize according to the screen width
    # FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
    # CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    layout: ImageLayout = CONSTRAINED

    # The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
    # Ignored if layout = FLUID.
    width: Int

    # The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
    # The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
    # matching the aspect ratio of the source image.
    height: Int

    # If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
    # If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    aspectRatio: Float

    # Format of generated placeholder image, displayed while the main image loads.
    # BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    # DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    # TRACED_SVG: a low-resolution traced SVG of the image.
    # NONE: no placeholder. Set "background" to use a fixed background color.
    placeholder: ImagePlaceholder

    # Options for the low-resolution placeholder image. Set placeholder to "BLURRED" to use this
    blurredOptions: BlurredOptions

    # Options for traced placeholder SVGs. You also should set placeholder to "TRACED_SVG".
    tracedSVGOptions: Potrace

    # The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
    # The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    # not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    # both PNG and JPG is not supported and will be ignored.
    formats: [ImageFormat]

    # A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
    # Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
    # and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
    outputPixelDensities: [Float]

    # Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
    # based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
    # It will never generate any images larger than the source.
    breakpoints: [Int]

    # The "sizes" property, passed to the img tag. This describes the display size of the image.
    # This does not affect the generated images, but is used by the browser to decide which images to download.
    # You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
    # does not actually span the full width of the screen, in which case you should pass the correct size here.
    sizes: String

    # The default quality. This is overridden by any format-specific options
    quality: Int

    # Options to pass to sharp when generating JPG images.
    jpgOptions: JPGOptions

    # Options to pass to sharp when generating PNG images.
    pngOptions: PNGOptions

    # Options to pass to sharp when generating WebP images.
    webpOptions: WebPOptions

    # Options to pass to sharp when generating AVIF images.
    avifOptions: AVIFOptions

    # Options to pass to sharp to control cropping and other image manipulations.
    transformOptions: TransformOptions

    # Background color applied to the wrapper. Also passed to sharp to use as a background when "letterboxing" an image to another aspect ratio.
    backgroundColor: String
  ): JSON!
  original: ImageSharpOriginal
  resize(width: Int, height: Int, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, jpegProgressive: Boolean = true, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, base64: Boolean = false, traceSVG: Potrace, toFormat: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpResize
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type ImageSharpFixed {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

type ImageSharpFluid {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
  originalImg: String
  originalName: String
  presentationWidth: Int!
  presentationHeight: Int!
}

enum ImagePlaceholder {
  DOMINANT_COLOR
  TRACED_SVG
  BLURRED
  NONE
}

input BlurredOptions {
  # Width of the generated low-res preview. Default is 20px
  width: Int

  # Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this
  toFormat: ImageFormat
}

input JPGOptions {
  quality: Int
  progressive: Boolean = true
}

input PNGOptions {
  quality: Int
  compressionSpeed: Int = 4
}

input WebPOptions {
  quality: Int
}

input AVIFOptions {
  quality: Int
  lossless: Boolean
  speed: Int
}

input TransformOptions {
  grayscale: Boolean = false
  duotone: DuotoneGradient
  rotate: Int = 0
  trim: Float = 0
  cropFocus: ImageCropFocus = ATTENTION
  fit: ImageFit = COVER
}

type ImageSharpOriginal {
  width: Float
  height: Float
  src: String
}

type ImageSharpResize {
  src: String
  tracedSVG: String
  width: Int
  height: Int
  aspectRatio: Float
  originalName: String
}

type Query {
  allStrapiTrail(filter: STRAPI_TRAILFilterInput, sort: STRAPI_TRAILSortInput, skip: Int, limit: Int): STRAPI_TRAILConnection!
  strapiTrail(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, title: StringQueryOperatorInput, content: STRAPI_TRAILContentFilterInput, criterion: StringQueryOperatorInput, trail_type: StringQueryOperatorInput, slug: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, updatedAt: DateQueryOperatorInput, publishedAt: DateQueryOperatorInput, cover_image: STRAPI__MEDIAFilterInput, bus: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFilterInput, car: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFilterInput, train: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFilterInput, coords: STRAPI__COMPONENT_COORDS_COORDSFilterInput, strapi_id: IntQueryOperatorInput, childrenStrapiTrailContentTextnode: STRAPI_TRAIL_CONTENT_TEXTNODEFilterListInput, childStrapiTrailContentTextnode: STRAPI_TRAIL_CONTENT_TEXTNODEFilterInput): STRAPI_TRAIL
  file(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, url: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, childrenImageSharp: ImageSharpFilterListInput, childImageSharp: ImageSharpFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): File
  allFile(filter: FileFilterInput, sort: FileSortInput, skip: Int, limit: Int): FileConnection!
  directory(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Directory
  allDirectory(filter: DirectoryFilterInput, sort: DirectorySortInput, skip: Int, limit: Int): DirectoryConnection!
  site(buildTime: DateQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput, port: IntQueryOperatorInput, host: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, pathPrefix: StringQueryOperatorInput, jsxRuntime: StringQueryOperatorInput, trailingSlash: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Site
  allSite(filter: SiteFilterInput, sort: SiteSortInput, skip: Int, limit: Int): SiteConnection!
  siteFunction(functionRoute: StringQueryOperatorInput, pluginName: StringQueryOperatorInput, originalAbsoluteFilePath: StringQueryOperatorInput, originalRelativeFilePath: StringQueryOperatorInput, relativeCompiledFilePath: StringQueryOperatorInput, absoluteCompiledFilePath: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): SiteFunction
  allSiteFunction(filter: SiteFunctionFilterInput, sort: SiteFunctionSortInput, skip: Int, limit: Int): SiteFunctionConnection!
  sitePage(path: StringQueryOperatorInput, component: StringQueryOperatorInput, internalComponentName: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, pageContext: JSONQueryOperatorInput, pluginCreator: SitePluginFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): SitePage
  allSitePage(filter: SitePageFilterInput, sort: SitePageSortInput, skip: Int, limit: Int): SitePageConnection!
  sitePlugin(resolve: StringQueryOperatorInput, name: StringQueryOperatorInput, version: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, browserAPIs: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: JSONQueryOperatorInput, packageJson: JSONQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): SitePlugin
  allSitePlugin(filter: SitePluginFilterInput, sort: SitePluginSortInput, skip: Int, limit: Int): SitePluginConnection!
  siteBuildMetadata(buildTime: DateQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): SiteBuildMetadata
  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, sort: SiteBuildMetadataSortInput, skip: Int, limit: Int): SiteBuildMetadataConnection!
  imageSharp(fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, original: ImageSharpOriginalFilterInput, resize: ImageSharpResizeFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ImageSharp
  allImageSharp(filter: ImageSharpFilterInput, sort: ImageSharpSortInput, skip: Int, limit: Int): ImageSharpConnection!
  content(data: ContentDataFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Content
  allContent(filter: ContentFilterInput, sort: ContentSortInput, skip: Int, limit: Int): ContentConnection!
  contentData(content: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ContentData
  allContentData(filter: ContentDataFilterInput, sort: ContentDataSortInput, skip: Int, limit: Int): ContentDataConnection!
  carAvailibility(parking1: StringQueryOperatorInput, parking2: StringQueryOperatorInput, parking3: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): CarAvailibility
  allCarAvailibility(filter: CarAvailibilityFilterInput, sort: CarAvailibilitySortInput, skip: Int, limit: Int): CarAvailibilityConnection!
  busAvailibility(stop1: StringQueryOperatorInput, stop2: StringQueryOperatorInput, stop3: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): BusAvailibility
  allBusAvailibility(filter: BusAvailibilityFilterInput, sort: BusAvailibilitySortInput, skip: Int, limit: Int): BusAvailibilityConnection!
  trainAvailibility(station1: StringQueryOperatorInput, station2: StringQueryOperatorInput, station3: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): TrainAvailibility
  allTrainAvailibility(filter: TrainAvailibilityFilterInput, sort: TrainAvailibilitySortInput, skip: Int, limit: Int): TrainAvailibilityConnection!
  coords(lat1: FloatQueryOperatorInput, lng1: FloatQueryOperatorInput, lat2: FloatQueryOperatorInput, lng2: FloatQueryOperatorInput, lat3: FloatQueryOperatorInput, lng3: FloatQueryOperatorInput, lat4: FloatQueryOperatorInput, lng4: FloatQueryOperatorInput, lat5: FloatQueryOperatorInput, lng5: FloatQueryOperatorInput, lat6: FloatQueryOperatorInput, lng6: FloatQueryOperatorInput, lat7: FloatQueryOperatorInput, lng7: FloatQueryOperatorInput, lat8: FloatQueryOperatorInput, lng8: FloatQueryOperatorInput, lat9: FloatQueryOperatorInput, lng9: FloatQueryOperatorInput, lat10: FloatQueryOperatorInput, lng10: FloatQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Coords
  allCoords(filter: CoordsFilterInput, sort: CoordsSortInput, skip: Int, limit: Int): CoordsConnection!
  uploadFile(name: StringQueryOperatorInput, alternativeText: StringQueryOperatorInput, caption: StringQueryOperatorInput, width: IntQueryOperatorInput, height: IntQueryOperatorInput, formats: JSONQueryOperatorInput, hash: StringQueryOperatorInput, ext: StringQueryOperatorInput, mime: StringQueryOperatorInput, size: FloatQueryOperatorInput, url: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): UploadFile
  allUploadFile(filter: UploadFileFilterInput, sort: UploadFileSortInput, skip: Int, limit: Int): UploadFileConnection!
  strapiMedia(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, name: StringQueryOperatorInput, alternativeText: StringQueryOperatorInput, caption: StringQueryOperatorInput, width: IntQueryOperatorInput, height: IntQueryOperatorInput, formats: STRAPI__MEDIAFormatsFilterInput, hash: StringQueryOperatorInput, ext: StringQueryOperatorInput, mime: StringQueryOperatorInput, size: FloatQueryOperatorInput, url: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, updatedAt: DateQueryOperatorInput, localFile: FileFilterInput, strapi_id: IntQueryOperatorInput): STRAPI__MEDIA
  allStrapiMedia(filter: STRAPI__MEDIAFilterInput, sort: STRAPI__MEDIASortInput, skip: Int, limit: Int): STRAPI__MEDIAConnection!
  strapiComponentCoordsCoords(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, lat1: FloatQueryOperatorInput, lat2: FloatQueryOperatorInput, lng1: FloatQueryOperatorInput, lng2: FloatQueryOperatorInput, strapi_id: IntQueryOperatorInput): STRAPI__COMPONENT_COORDS_COORDS
  allStrapiComponentCoordsCoords(filter: STRAPI__COMPONENT_COORDS_COORDSFilterInput, sort: STRAPI__COMPONENT_COORDS_COORDSSortInput, skip: Int, limit: Int): STRAPI__COMPONENT_COORDS_COORDSConnection!
  strapiComponentAvailabilityAvailabilityTrain(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, station1: StringQueryOperatorInput, station2: StringQueryOperatorInput, station3: StringQueryOperatorInput, strapi_id: IntQueryOperatorInput): STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAIN
  allStrapiComponentAvailabilityAvailabilityTrain(filter: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFilterInput, sort: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINSortInput, skip: Int, limit: Int): STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINConnection!
  strapiComponentAvailabilityAvailabilityCar(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, parking1: StringQueryOperatorInput, parking2: StringQueryOperatorInput, parking3: StringQueryOperatorInput, strapi_id: IntQueryOperatorInput): STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CAR
  allStrapiComponentAvailabilityAvailabilityCar(filter: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFilterInput, sort: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARSortInput, skip: Int, limit: Int): STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARConnection!
  strapiComponentAvailabilityAvailabilityBus(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, stop1: StringQueryOperatorInput, stop2: StringQueryOperatorInput, stop3: StringQueryOperatorInput, strapi_id: IntQueryOperatorInput): STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUS
  allStrapiComponentAvailabilityAvailabilityBus(filter: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFilterInput, sort: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSSortInput, skip: Int, limit: Int): STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSConnection!
  strapiTrailContentTextnode(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, content: StringQueryOperatorInput): STRAPI_TRAIL_CONTENT_TEXTNODE
  allStrapiTrailContentTextnode(filter: STRAPI_TRAIL_CONTENT_TEXTNODEFilterInput, sort: STRAPI_TRAIL_CONTENT_TEXTNODESortInput, skip: Int, limit: Int): STRAPI_TRAIL_CONTENT_TEXTNODEConnection!
  instagramContent(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, media_url: StringQueryOperatorInput, media_type: StringQueryOperatorInput, permalink: StringQueryOperatorInput, timestamp: DateQueryOperatorInput, caption: StringQueryOperatorInput, username: StringQueryOperatorInput, album: InstagramContentAlbumFilterListInput, media_id: StringQueryOperatorInput, localImage: FileFilterInput, localFile: FileFilterInput): InstagramContent
  allInstagramContent(filter: InstagramContentFilterInput, sort: InstagramContentSortInput, skip: Int, limit: Int): InstagramContentConnection!
}

type STRAPI_TRAILConnection {
  totalCount: Int!
  edges: [STRAPI_TRAILEdge!]!
  nodes: [STRAPI_TRAIL!]!
  pageInfo: PageInfo!
  distinct(field: STRAPI_TRAILFieldsEnum!): [String!]!
  max(field: STRAPI_TRAILFieldsEnum!): Float
  min(field: STRAPI_TRAILFieldsEnum!): Float
  sum(field: STRAPI_TRAILFieldsEnum!): Float
  group(skip: Int, limit: Int, field: STRAPI_TRAILFieldsEnum!): [STRAPI_TRAILGroupConnection!]!
}

type STRAPI_TRAILEdge {
  next: STRAPI_TRAIL
  node: STRAPI_TRAIL!
  previous: STRAPI_TRAIL
}

type PageInfo {
  currentPage: Int!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

enum STRAPI_TRAILFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  title
  content___data___id
  content___data___parent___id
  content___data___parent___children
  content___data___children
  content___data___children___id
  content___data___children___children
  content___data___internal___content
  content___data___internal___contentDigest
  content___data___internal___description
  content___data___internal___fieldOwners
  content___data___internal___ignoreType
  content___data___internal___mediaType
  content___data___internal___owner
  content___data___internal___type
  content___data___content
  criterion
  trail_type
  slug
  createdAt
  updatedAt
  publishedAt
  cover_image___id
  cover_image___parent___id
  cover_image___parent___parent___id
  cover_image___parent___parent___children
  cover_image___parent___children
  cover_image___parent___children___id
  cover_image___parent___children___children
  cover_image___parent___internal___content
  cover_image___parent___internal___contentDigest
  cover_image___parent___internal___description
  cover_image___parent___internal___fieldOwners
  cover_image___parent___internal___ignoreType
  cover_image___parent___internal___mediaType
  cover_image___parent___internal___owner
  cover_image___parent___internal___type
  cover_image___children
  cover_image___children___id
  cover_image___children___parent___id
  cover_image___children___parent___children
  cover_image___children___children
  cover_image___children___children___id
  cover_image___children___children___children
  cover_image___children___internal___content
  cover_image___children___internal___contentDigest
  cover_image___children___internal___description
  cover_image___children___internal___fieldOwners
  cover_image___children___internal___ignoreType
  cover_image___children___internal___mediaType
  cover_image___children___internal___owner
  cover_image___children___internal___type
  cover_image___internal___content
  cover_image___internal___contentDigest
  cover_image___internal___description
  cover_image___internal___fieldOwners
  cover_image___internal___ignoreType
  cover_image___internal___mediaType
  cover_image___internal___owner
  cover_image___internal___type
  cover_image___name
  cover_image___alternativeText
  cover_image___caption
  cover_image___width
  cover_image___height
  cover_image___formats___large___ext
  cover_image___formats___large___url
  cover_image___formats___large___hash
  cover_image___formats___large___mime
  cover_image___formats___large___name
  cover_image___formats___large___size
  cover_image___formats___large___width
  cover_image___formats___large___height
  cover_image___formats___small___ext
  cover_image___formats___small___url
  cover_image___formats___small___hash
  cover_image___formats___small___mime
  cover_image___formats___small___name
  cover_image___formats___small___size
  cover_image___formats___small___width
  cover_image___formats___small___height
  cover_image___formats___medium___ext
  cover_image___formats___medium___url
  cover_image___formats___medium___hash
  cover_image___formats___medium___mime
  cover_image___formats___medium___name
  cover_image___formats___medium___size
  cover_image___formats___medium___width
  cover_image___formats___medium___height
  cover_image___formats___thumbnail___ext
  cover_image___formats___thumbnail___url
  cover_image___formats___thumbnail___hash
  cover_image___formats___thumbnail___mime
  cover_image___formats___thumbnail___name
  cover_image___formats___thumbnail___size
  cover_image___formats___thumbnail___width
  cover_image___formats___thumbnail___height
  cover_image___hash
  cover_image___ext
  cover_image___mime
  cover_image___size
  cover_image___url
  cover_image___createdAt
  cover_image___updatedAt
  cover_image___localFile___sourceInstanceName
  cover_image___localFile___absolutePath
  cover_image___localFile___relativePath
  cover_image___localFile___extension
  cover_image___localFile___size
  cover_image___localFile___prettySize
  cover_image___localFile___modifiedTime
  cover_image___localFile___accessTime
  cover_image___localFile___changeTime
  cover_image___localFile___birthTime
  cover_image___localFile___root
  cover_image___localFile___dir
  cover_image___localFile___base
  cover_image___localFile___ext
  cover_image___localFile___name
  cover_image___localFile___relativeDirectory
  cover_image___localFile___dev
  cover_image___localFile___mode
  cover_image___localFile___nlink
  cover_image___localFile___uid
  cover_image___localFile___gid
  cover_image___localFile___rdev
  cover_image___localFile___ino
  cover_image___localFile___atimeMs
  cover_image___localFile___mtimeMs
  cover_image___localFile___ctimeMs
  cover_image___localFile___atime
  cover_image___localFile___mtime
  cover_image___localFile___ctime
  cover_image___localFile___birthtime
  cover_image___localFile___birthtimeMs
  cover_image___localFile___blksize
  cover_image___localFile___blocks
  cover_image___localFile___url
  cover_image___localFile___publicURL
  cover_image___localFile___childrenImageSharp
  cover_image___localFile___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover_image___localFile___childrenImageSharp___id
  cover_image___localFile___childrenImageSharp___children
  cover_image___localFile___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  cover_image___localFile___childImageSharp___id
  cover_image___localFile___childImageSharp___children
  cover_image___localFile___id
  cover_image___localFile___parent___id
  cover_image___localFile___parent___children
  cover_image___localFile___children
  cover_image___localFile___children___id
  cover_image___localFile___children___children
  cover_image___localFile___internal___content
  cover_image___localFile___internal___contentDigest
  cover_image___localFile___internal___description
  cover_image___localFile___internal___fieldOwners
  cover_image___localFile___internal___ignoreType
  cover_image___localFile___internal___mediaType
  cover_image___localFile___internal___owner
  cover_image___localFile___internal___type
  cover_image___strapi_id
  bus___id
  bus___parent___id
  bus___parent___parent___id
  bus___parent___parent___children
  bus___parent___children
  bus___parent___children___id
  bus___parent___children___children
  bus___parent___internal___content
  bus___parent___internal___contentDigest
  bus___parent___internal___description
  bus___parent___internal___fieldOwners
  bus___parent___internal___ignoreType
  bus___parent___internal___mediaType
  bus___parent___internal___owner
  bus___parent___internal___type
  bus___children
  bus___children___id
  bus___children___parent___id
  bus___children___parent___children
  bus___children___children
  bus___children___children___id
  bus___children___children___children
  bus___children___internal___content
  bus___children___internal___contentDigest
  bus___children___internal___description
  bus___children___internal___fieldOwners
  bus___children___internal___ignoreType
  bus___children___internal___mediaType
  bus___children___internal___owner
  bus___children___internal___type
  bus___internal___content
  bus___internal___contentDigest
  bus___internal___description
  bus___internal___fieldOwners
  bus___internal___ignoreType
  bus___internal___mediaType
  bus___internal___owner
  bus___internal___type
  bus___stop1
  bus___stop2
  bus___stop3
  bus___strapi_id
  car___id
  car___parent___id
  car___parent___parent___id
  car___parent___parent___children
  car___parent___children
  car___parent___children___id
  car___parent___children___children
  car___parent___internal___content
  car___parent___internal___contentDigest
  car___parent___internal___description
  car___parent___internal___fieldOwners
  car___parent___internal___ignoreType
  car___parent___internal___mediaType
  car___parent___internal___owner
  car___parent___internal___type
  car___children
  car___children___id
  car___children___parent___id
  car___children___parent___children
  car___children___children
  car___children___children___id
  car___children___children___children
  car___children___internal___content
  car___children___internal___contentDigest
  car___children___internal___description
  car___children___internal___fieldOwners
  car___children___internal___ignoreType
  car___children___internal___mediaType
  car___children___internal___owner
  car___children___internal___type
  car___internal___content
  car___internal___contentDigest
  car___internal___description
  car___internal___fieldOwners
  car___internal___ignoreType
  car___internal___mediaType
  car___internal___owner
  car___internal___type
  car___parking1
  car___parking2
  car___parking3
  car___strapi_id
  train___id
  train___parent___id
  train___parent___parent___id
  train___parent___parent___children
  train___parent___children
  train___parent___children___id
  train___parent___children___children
  train___parent___internal___content
  train___parent___internal___contentDigest
  train___parent___internal___description
  train___parent___internal___fieldOwners
  train___parent___internal___ignoreType
  train___parent___internal___mediaType
  train___parent___internal___owner
  train___parent___internal___type
  train___children
  train___children___id
  train___children___parent___id
  train___children___parent___children
  train___children___children
  train___children___children___id
  train___children___children___children
  train___children___internal___content
  train___children___internal___contentDigest
  train___children___internal___description
  train___children___internal___fieldOwners
  train___children___internal___ignoreType
  train___children___internal___mediaType
  train___children___internal___owner
  train___children___internal___type
  train___internal___content
  train___internal___contentDigest
  train___internal___description
  train___internal___fieldOwners
  train___internal___ignoreType
  train___internal___mediaType
  train___internal___owner
  train___internal___type
  train___station1
  train___station2
  train___station3
  train___strapi_id
  coords___id
  coords___parent___id
  coords___parent___parent___id
  coords___parent___parent___children
  coords___parent___children
  coords___parent___children___id
  coords___parent___children___children
  coords___parent___internal___content
  coords___parent___internal___contentDigest
  coords___parent___internal___description
  coords___parent___internal___fieldOwners
  coords___parent___internal___ignoreType
  coords___parent___internal___mediaType
  coords___parent___internal___owner
  coords___parent___internal___type
  coords___children
  coords___children___id
  coords___children___parent___id
  coords___children___parent___children
  coords___children___children
  coords___children___children___id
  coords___children___children___children
  coords___children___internal___content
  coords___children___internal___contentDigest
  coords___children___internal___description
  coords___children___internal___fieldOwners
  coords___children___internal___ignoreType
  coords___children___internal___mediaType
  coords___children___internal___owner
  coords___children___internal___type
  coords___internal___content
  coords___internal___contentDigest
  coords___internal___description
  coords___internal___fieldOwners
  coords___internal___ignoreType
  coords___internal___mediaType
  coords___internal___owner
  coords___internal___type
  coords___lat1
  coords___lat2
  coords___lng1
  coords___lng2
  coords___strapi_id
  strapi_id
  childrenStrapiTrailContentTextnode
  childrenStrapiTrailContentTextnode___id
  childrenStrapiTrailContentTextnode___parent___id
  childrenStrapiTrailContentTextnode___parent___parent___id
  childrenStrapiTrailContentTextnode___parent___parent___children
  childrenStrapiTrailContentTextnode___parent___children
  childrenStrapiTrailContentTextnode___parent___children___id
  childrenStrapiTrailContentTextnode___parent___children___children
  childrenStrapiTrailContentTextnode___parent___internal___content
  childrenStrapiTrailContentTextnode___parent___internal___contentDigest
  childrenStrapiTrailContentTextnode___parent___internal___description
  childrenStrapiTrailContentTextnode___parent___internal___fieldOwners
  childrenStrapiTrailContentTextnode___parent___internal___ignoreType
  childrenStrapiTrailContentTextnode___parent___internal___mediaType
  childrenStrapiTrailContentTextnode___parent___internal___owner
  childrenStrapiTrailContentTextnode___parent___internal___type
  childrenStrapiTrailContentTextnode___children
  childrenStrapiTrailContentTextnode___children___id
  childrenStrapiTrailContentTextnode___children___parent___id
  childrenStrapiTrailContentTextnode___children___parent___children
  childrenStrapiTrailContentTextnode___children___children
  childrenStrapiTrailContentTextnode___children___children___id
  childrenStrapiTrailContentTextnode___children___children___children
  childrenStrapiTrailContentTextnode___children___internal___content
  childrenStrapiTrailContentTextnode___children___internal___contentDigest
  childrenStrapiTrailContentTextnode___children___internal___description
  childrenStrapiTrailContentTextnode___children___internal___fieldOwners
  childrenStrapiTrailContentTextnode___children___internal___ignoreType
  childrenStrapiTrailContentTextnode___children___internal___mediaType
  childrenStrapiTrailContentTextnode___children___internal___owner
  childrenStrapiTrailContentTextnode___children___internal___type
  childrenStrapiTrailContentTextnode___internal___content
  childrenStrapiTrailContentTextnode___internal___contentDigest
  childrenStrapiTrailContentTextnode___internal___description
  childrenStrapiTrailContentTextnode___internal___fieldOwners
  childrenStrapiTrailContentTextnode___internal___ignoreType
  childrenStrapiTrailContentTextnode___internal___mediaType
  childrenStrapiTrailContentTextnode___internal___owner
  childrenStrapiTrailContentTextnode___internal___type
  childrenStrapiTrailContentTextnode___content
  childStrapiTrailContentTextnode___id
  childStrapiTrailContentTextnode___parent___id
  childStrapiTrailContentTextnode___parent___parent___id
  childStrapiTrailContentTextnode___parent___parent___children
  childStrapiTrailContentTextnode___parent___children
  childStrapiTrailContentTextnode___parent___children___id
  childStrapiTrailContentTextnode___parent___children___children
  childStrapiTrailContentTextnode___parent___internal___content
  childStrapiTrailContentTextnode___parent___internal___contentDigest
  childStrapiTrailContentTextnode___parent___internal___description
  childStrapiTrailContentTextnode___parent___internal___fieldOwners
  childStrapiTrailContentTextnode___parent___internal___ignoreType
  childStrapiTrailContentTextnode___parent___internal___mediaType
  childStrapiTrailContentTextnode___parent___internal___owner
  childStrapiTrailContentTextnode___parent___internal___type
  childStrapiTrailContentTextnode___children
  childStrapiTrailContentTextnode___children___id
  childStrapiTrailContentTextnode___children___parent___id
  childStrapiTrailContentTextnode___children___parent___children
  childStrapiTrailContentTextnode___children___children
  childStrapiTrailContentTextnode___children___children___id
  childStrapiTrailContentTextnode___children___children___children
  childStrapiTrailContentTextnode___children___internal___content
  childStrapiTrailContentTextnode___children___internal___contentDigest
  childStrapiTrailContentTextnode___children___internal___description
  childStrapiTrailContentTextnode___children___internal___fieldOwners
  childStrapiTrailContentTextnode___children___internal___ignoreType
  childStrapiTrailContentTextnode___children___internal___mediaType
  childStrapiTrailContentTextnode___children___internal___owner
  childStrapiTrailContentTextnode___children___internal___type
  childStrapiTrailContentTextnode___internal___content
  childStrapiTrailContentTextnode___internal___contentDigest
  childStrapiTrailContentTextnode___internal___description
  childStrapiTrailContentTextnode___internal___fieldOwners
  childStrapiTrailContentTextnode___internal___ignoreType
  childStrapiTrailContentTextnode___internal___mediaType
  childStrapiTrailContentTextnode___internal___owner
  childStrapiTrailContentTextnode___internal___type
  childStrapiTrailContentTextnode___content
}

type STRAPI_TRAILGroupConnection {
  totalCount: Int!
  edges: [STRAPI_TRAILEdge!]!
  nodes: [STRAPI_TRAIL!]!
  pageInfo: PageInfo!
  distinct(field: STRAPI_TRAILFieldsEnum!): [String!]!
  max(field: STRAPI_TRAILFieldsEnum!): Float
  min(field: STRAPI_TRAILFieldsEnum!): Float
  sum(field: STRAPI_TRAILFieldsEnum!): Float
  group(skip: Int, limit: Int, field: STRAPI_TRAILFieldsEnum!): [STRAPI_TRAILGroupConnection!]!
  field: String!
  fieldValue: String
}

input STRAPI_TRAILFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  title: StringQueryOperatorInput
  content: STRAPI_TRAILContentFilterInput
  criterion: StringQueryOperatorInput
  trail_type: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  publishedAt: DateQueryOperatorInput
  cover_image: STRAPI__MEDIAFilterInput
  bus: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFilterInput
  car: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFilterInput
  train: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFilterInput
  coords: STRAPI__COMPONENT_COORDS_COORDSFilterInput
  strapi_id: IntQueryOperatorInput
  childrenStrapiTrailContentTextnode: STRAPI_TRAIL_CONTENT_TEXTNODEFilterListInput
  childStrapiTrailContentTextnode: STRAPI_TRAIL_CONTENT_TEXTNODEFilterInput
}

input StringQueryOperatorInput {
  eq: String
  ne: String
  in: [String]
  nin: [String]
  regex: String
  glob: String
}

input NodeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input BooleanQueryOperatorInput {
  eq: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
}

input STRAPI_TRAILContentFilterInput {
  data: STRAPI_TRAIL_CONTENT_TEXTNODEFilterInput
}

input STRAPI_TRAIL_CONTENT_TEXTNODEFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  content: StringQueryOperatorInput
}

input DateQueryOperatorInput {
  eq: Date
  ne: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  in: [Date]
  nin: [Date]
}

input STRAPI__MEDIAFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  alternativeText: StringQueryOperatorInput
  caption: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  formats: STRAPI__MEDIAFormatsFilterInput
  hash: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  mime: StringQueryOperatorInput
  size: FloatQueryOperatorInput
  url: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  localFile: FileFilterInput
  strapi_id: IntQueryOperatorInput
}

input IntQueryOperatorInput {
  eq: Int
  ne: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  in: [Int]
  nin: [Int]
}

input STRAPI__MEDIAFormatsFilterInput {
  large: STRAPI__MEDIAFormatsLargeFilterInput
  small: STRAPI__MEDIAFormatsSmallFilterInput
  medium: STRAPI__MEDIAFormatsMediumFilterInput
  thumbnail: STRAPI__MEDIAFormatsThumbnailFilterInput
}

input STRAPI__MEDIAFormatsLargeFilterInput {
  ext: StringQueryOperatorInput
  url: StringQueryOperatorInput
  hash: StringQueryOperatorInput
  mime: StringQueryOperatorInput
  name: StringQueryOperatorInput
  size: FloatQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  provider_metadata: STRAPI__MEDIAFormatsLargeProvider_metadataFilterInput
}

input FloatQueryOperatorInput {
  eq: Float
  ne: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float]
  nin: [Float]
}

input STRAPI__MEDIAFormatsLargeProvider_metadataFilterInput {
  public_id: StringQueryOperatorInput
  resource_type: StringQueryOperatorInput
}

input STRAPI__MEDIAFormatsSmallFilterInput {
  ext: StringQueryOperatorInput
  url: StringQueryOperatorInput
  hash: StringQueryOperatorInput
  mime: StringQueryOperatorInput
  name: StringQueryOperatorInput
  size: FloatQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  provider_metadata: STRAPI__MEDIAFormatsSmallProvider_metadataFilterInput
}

input STRAPI__MEDIAFormatsSmallProvider_metadataFilterInput {
  public_id: StringQueryOperatorInput
  resource_type: StringQueryOperatorInput
}

input STRAPI__MEDIAFormatsMediumFilterInput {
  ext: StringQueryOperatorInput
  url: StringQueryOperatorInput
  hash: StringQueryOperatorInput
  mime: StringQueryOperatorInput
  name: StringQueryOperatorInput
  size: FloatQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  provider_metadata: STRAPI__MEDIAFormatsMediumProvider_metadataFilterInput
}

input STRAPI__MEDIAFormatsMediumProvider_metadataFilterInput {
  public_id: StringQueryOperatorInput
  resource_type: StringQueryOperatorInput
}

input STRAPI__MEDIAFormatsThumbnailFilterInput {
  ext: StringQueryOperatorInput
  url: StringQueryOperatorInput
  hash: StringQueryOperatorInput
  mime: StringQueryOperatorInput
  name: StringQueryOperatorInput
  size: FloatQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  provider_metadata: STRAPI__MEDIAFormatsThumbnailProvider_metadataFilterInput
}

input STRAPI__MEDIAFormatsThumbnailProvider_metadataFilterInput {
  public_id: StringQueryOperatorInput
  resource_type: StringQueryOperatorInput
}

input FileFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  url: StringQueryOperatorInput
  publicURL: StringQueryOperatorInput
  childrenImageSharp: ImageSharpFilterListInput
  childImageSharp: ImageSharpFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input ImageSharpFilterListInput {
  elemMatch: ImageSharpFilterInput
}

input ImageSharpFilterInput {
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  gatsbyImageData: JSONQueryOperatorInput
  original: ImageSharpOriginalFilterInput
  resize: ImageSharpResizeFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input ImageSharpFixedFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
}

input ImageSharpFluidFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
}

input JSONQueryOperatorInput {
  eq: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  regex: JSON
  glob: JSON
}

input ImageSharpOriginalFilterInput {
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
}

input ImageSharpResizeFilterInput {
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
}

input STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  stop1: StringQueryOperatorInput
  stop2: StringQueryOperatorInput
  stop3: StringQueryOperatorInput
  strapi_id: IntQueryOperatorInput
}

input STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  parking1: StringQueryOperatorInput
  parking2: StringQueryOperatorInput
  parking3: StringQueryOperatorInput
  strapi_id: IntQueryOperatorInput
}

input STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  station1: StringQueryOperatorInput
  station2: StringQueryOperatorInput
  station3: StringQueryOperatorInput
  strapi_id: IntQueryOperatorInput
}

input STRAPI__COMPONENT_COORDS_COORDSFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  lat1: FloatQueryOperatorInput
  lat2: FloatQueryOperatorInput
  lng1: FloatQueryOperatorInput
  lng2: FloatQueryOperatorInput
  strapi_id: IntQueryOperatorInput
}

input STRAPI_TRAIL_CONTENT_TEXTNODEFilterListInput {
  elemMatch: STRAPI_TRAIL_CONTENT_TEXTNODEFilterInput
}

input STRAPI_TRAILSortInput {
  fields: [STRAPI_TRAILFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

enum SortOrderEnum {
  ASC
  DESC
}

type FileConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  distinct(field: FileFieldsEnum!): [String!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  sum(field: FileFieldsEnum!): Float
  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

enum FileFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  blksize
  blocks
  url
  publicURL
  childrenImageSharp
  childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___width
  childrenImageSharp___original___height
  childrenImageSharp___original___src
  childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___id
  childrenImageSharp___parent___id
  childrenImageSharp___parent___parent___id
  childrenImageSharp___parent___parent___children
  childrenImageSharp___parent___children
  childrenImageSharp___parent___children___id
  childrenImageSharp___parent___children___children
  childrenImageSharp___parent___internal___content
  childrenImageSharp___parent___internal___contentDigest
  childrenImageSharp___parent___internal___description
  childrenImageSharp___parent___internal___fieldOwners
  childrenImageSharp___parent___internal___ignoreType
  childrenImageSharp___parent___internal___mediaType
  childrenImageSharp___parent___internal___owner
  childrenImageSharp___parent___internal___type
  childrenImageSharp___children
  childrenImageSharp___children___id
  childrenImageSharp___children___parent___id
  childrenImageSharp___children___parent___children
  childrenImageSharp___children___children
  childrenImageSharp___children___children___id
  childrenImageSharp___children___children___children
  childrenImageSharp___children___internal___content
  childrenImageSharp___children___internal___contentDigest
  childrenImageSharp___children___internal___description
  childrenImageSharp___children___internal___fieldOwners
  childrenImageSharp___children___internal___ignoreType
  childrenImageSharp___children___internal___mediaType
  childrenImageSharp___children___internal___owner
  childrenImageSharp___children___internal___type
  childrenImageSharp___internal___content
  childrenImageSharp___internal___contentDigest
  childrenImageSharp___internal___description
  childrenImageSharp___internal___fieldOwners
  childrenImageSharp___internal___ignoreType
  childrenImageSharp___internal___mediaType
  childrenImageSharp___internal___owner
  childrenImageSharp___internal___type
  childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___width
  childImageSharp___original___height
  childImageSharp___original___src
  childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___id
  childImageSharp___parent___id
  childImageSharp___parent___parent___id
  childImageSharp___parent___parent___children
  childImageSharp___parent___children
  childImageSharp___parent___children___id
  childImageSharp___parent___children___children
  childImageSharp___parent___internal___content
  childImageSharp___parent___internal___contentDigest
  childImageSharp___parent___internal___description
  childImageSharp___parent___internal___fieldOwners
  childImageSharp___parent___internal___ignoreType
  childImageSharp___parent___internal___mediaType
  childImageSharp___parent___internal___owner
  childImageSharp___parent___internal___type
  childImageSharp___children
  childImageSharp___children___id
  childImageSharp___children___parent___id
  childImageSharp___children___parent___children
  childImageSharp___children___children
  childImageSharp___children___children___id
  childImageSharp___children___children___children
  childImageSharp___children___internal___content
  childImageSharp___children___internal___contentDigest
  childImageSharp___children___internal___description
  childImageSharp___children___internal___fieldOwners
  childImageSharp___children___internal___ignoreType
  childImageSharp___children___internal___mediaType
  childImageSharp___children___internal___owner
  childImageSharp___children___internal___type
  childImageSharp___internal___content
  childImageSharp___internal___contentDigest
  childImageSharp___internal___description
  childImageSharp___internal___fieldOwners
  childImageSharp___internal___ignoreType
  childImageSharp___internal___mediaType
  childImageSharp___internal___owner
  childImageSharp___internal___type
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type FileGroupConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  distinct(field: FileFieldsEnum!): [String!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  sum(field: FileFieldsEnum!): Float
  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!
  field: String!
  fieldValue: String
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type DirectoryConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  distinct(field: DirectoryFieldsEnum!): [String!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  sum(field: DirectoryFieldsEnum!): Float
  group(skip: Int, limit: Int, field: DirectoryFieldsEnum!): [DirectoryGroupConnection!]!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

enum DirectoryFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type DirectoryGroupConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  distinct(field: DirectoryFieldsEnum!): [String!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  sum(field: DirectoryFieldsEnum!): Float
  group(skip: Int, limit: Int, field: DirectoryFieldsEnum!): [DirectoryGroupConnection!]!
  field: String!
  fieldValue: String
}

input DirectoryFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
  author: StringQueryOperatorInput
}

type SiteConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  distinct(field: SiteFieldsEnum!): [String!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  sum(field: SiteFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

enum SiteFieldsEnum {
  buildTime
  siteMetadata___title
  siteMetadata___description
  siteMetadata___author
  port
  host
  polyfill
  pathPrefix
  jsxRuntime
  trailingSlash
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SiteGroupConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  distinct(field: SiteFieldsEnum!): [String!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  sum(field: SiteFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!
  field: String!
  fieldValue: String
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
  port: IntQueryOperatorInput
  host: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  pathPrefix: StringQueryOperatorInput
  jsxRuntime: StringQueryOperatorInput
  trailingSlash: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteFunctionConnection {
  totalCount: Int!
  edges: [SiteFunctionEdge!]!
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  sum(field: SiteFunctionFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFunctionFieldsEnum!): [SiteFunctionGroupConnection!]!
}

type SiteFunctionEdge {
  next: SiteFunction
  node: SiteFunction!
  previous: SiteFunction
}

enum SiteFunctionFieldsEnum {
  functionRoute
  pluginName
  originalAbsoluteFilePath
  originalRelativeFilePath
  relativeCompiledFilePath
  absoluteCompiledFilePath
  matchPath
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SiteFunctionGroupConnection {
  totalCount: Int!
  edges: [SiteFunctionEdge!]!
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  sum(field: SiteFunctionFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFunctionFieldsEnum!): [SiteFunctionGroupConnection!]!
  field: String!
  fieldValue: String
}

input SiteFunctionFilterInput {
  functionRoute: StringQueryOperatorInput
  pluginName: StringQueryOperatorInput
  originalAbsoluteFilePath: StringQueryOperatorInput
  originalRelativeFilePath: StringQueryOperatorInput
  relativeCompiledFilePath: StringQueryOperatorInput
  absoluteCompiledFilePath: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteFunctionSortInput {
  fields: [SiteFunctionFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
  resolve: StringQueryOperatorInput
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
  nodeAPIs: StringQueryOperatorInput
  browserAPIs: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  pluginFilepath: StringQueryOperatorInput
  pluginOptions: JSONQueryOperatorInput
  packageJson: JSONQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type SitePageConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  distinct(field: SitePageFieldsEnum!): [String!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  sum(field: SitePageFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePageFieldsEnum!): [SitePageGroupConnection!]!
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

enum SitePageFieldsEnum {
  path
  component
  internalComponentName
  componentChunkName
  matchPath
  pageContext
  pluginCreator___resolve
  pluginCreator___name
  pluginCreator___version
  pluginCreator___nodeAPIs
  pluginCreator___browserAPIs
  pluginCreator___ssrAPIs
  pluginCreator___pluginFilepath
  pluginCreator___pluginOptions
  pluginCreator___packageJson
  pluginCreator___id
  pluginCreator___parent___id
  pluginCreator___parent___parent___id
  pluginCreator___parent___parent___children
  pluginCreator___parent___children
  pluginCreator___parent___children___id
  pluginCreator___parent___children___children
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___children
  pluginCreator___children___id
  pluginCreator___children___parent___id
  pluginCreator___children___parent___children
  pluginCreator___children___children
  pluginCreator___children___children___id
  pluginCreator___children___children___children
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SitePageGroupConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  distinct(field: SitePageFieldsEnum!): [String!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  sum(field: SitePageFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePageFieldsEnum!): [SitePageGroupConnection!]!
  field: String!
  fieldValue: String
}

input SitePageFilterInput {
  path: StringQueryOperatorInput
  component: StringQueryOperatorInput
  internalComponentName: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  pageContext: JSONQueryOperatorInput
  pluginCreator: SitePluginFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SitePluginConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  distinct(field: SitePluginFieldsEnum!): [String!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  sum(field: SitePluginFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePluginFieldsEnum!): [SitePluginGroupConnection!]!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

enum SitePluginFieldsEnum {
  resolve
  name
  version
  nodeAPIs
  browserAPIs
  ssrAPIs
  pluginFilepath
  pluginOptions
  packageJson
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SitePluginGroupConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  distinct(field: SitePluginFieldsEnum!): [String!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  sum(field: SitePluginFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePluginFieldsEnum!): [SitePluginGroupConnection!]!
  field: String!
  fieldValue: String
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteBuildMetadataConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteBuildMetadataFieldsEnum!): [SiteBuildMetadataGroupConnection!]!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

enum SiteBuildMetadataFieldsEnum {
  buildTime
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SiteBuildMetadataGroupConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteBuildMetadataFieldsEnum!): [SiteBuildMetadataGroupConnection!]!
  field: String!
  fieldValue: String
}

input SiteBuildMetadataFilterInput {
  buildTime: DateQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type ImageSharpConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  sum(field: ImageSharpFieldsEnum!): Float
  group(skip: Int, limit: Int, field: ImageSharpFieldsEnum!): [ImageSharpGroupConnection!]!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

enum ImageSharpFieldsEnum {
  fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___width
  original___height
  original___src
  resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type ImageSharpGroupConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  sum(field: ImageSharpFieldsEnum!): Float
  group(skip: Int, limit: Int, field: ImageSharpFieldsEnum!): [ImageSharpGroupConnection!]!
  field: String!
  fieldValue: String
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input ContentDataFilterInput {
  content: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type ContentConnection {
  totalCount: Int!
  edges: [ContentEdge!]!
  nodes: [Content!]!
  pageInfo: PageInfo!
  distinct(field: ContentFieldsEnum!): [String!]!
  max(field: ContentFieldsEnum!): Float
  min(field: ContentFieldsEnum!): Float
  sum(field: ContentFieldsEnum!): Float
  group(skip: Int, limit: Int, field: ContentFieldsEnum!): [ContentGroupConnection!]!
}

type ContentEdge {
  next: Content
  node: Content!
  previous: Content
}

enum ContentFieldsEnum {
  data___content
  data___id
  data___parent___id
  data___parent___parent___id
  data___parent___parent___children
  data___parent___children
  data___parent___children___id
  data___parent___children___children
  data___parent___internal___content
  data___parent___internal___contentDigest
  data___parent___internal___description
  data___parent___internal___fieldOwners
  data___parent___internal___ignoreType
  data___parent___internal___mediaType
  data___parent___internal___owner
  data___parent___internal___type
  data___children
  data___children___id
  data___children___parent___id
  data___children___parent___children
  data___children___children
  data___children___children___id
  data___children___children___children
  data___children___internal___content
  data___children___internal___contentDigest
  data___children___internal___description
  data___children___internal___fieldOwners
  data___children___internal___ignoreType
  data___children___internal___mediaType
  data___children___internal___owner
  data___children___internal___type
  data___internal___content
  data___internal___contentDigest
  data___internal___description
  data___internal___fieldOwners
  data___internal___ignoreType
  data___internal___mediaType
  data___internal___owner
  data___internal___type
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type ContentGroupConnection {
  totalCount: Int!
  edges: [ContentEdge!]!
  nodes: [Content!]!
  pageInfo: PageInfo!
  distinct(field: ContentFieldsEnum!): [String!]!
  max(field: ContentFieldsEnum!): Float
  min(field: ContentFieldsEnum!): Float
  sum(field: ContentFieldsEnum!): Float
  group(skip: Int, limit: Int, field: ContentFieldsEnum!): [ContentGroupConnection!]!
  field: String!
  fieldValue: String
}

input ContentFilterInput {
  data: ContentDataFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input ContentSortInput {
  fields: [ContentFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type ContentDataConnection {
  totalCount: Int!
  edges: [ContentDataEdge!]!
  nodes: [ContentData!]!
  pageInfo: PageInfo!
  distinct(field: ContentDataFieldsEnum!): [String!]!
  max(field: ContentDataFieldsEnum!): Float
  min(field: ContentDataFieldsEnum!): Float
  sum(field: ContentDataFieldsEnum!): Float
  group(skip: Int, limit: Int, field: ContentDataFieldsEnum!): [ContentDataGroupConnection!]!
}

type ContentDataEdge {
  next: ContentData
  node: ContentData!
  previous: ContentData
}

enum ContentDataFieldsEnum {
  content
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type ContentDataGroupConnection {
  totalCount: Int!
  edges: [ContentDataEdge!]!
  nodes: [ContentData!]!
  pageInfo: PageInfo!
  distinct(field: ContentDataFieldsEnum!): [String!]!
  max(field: ContentDataFieldsEnum!): Float
  min(field: ContentDataFieldsEnum!): Float
  sum(field: ContentDataFieldsEnum!): Float
  group(skip: Int, limit: Int, field: ContentDataFieldsEnum!): [ContentDataGroupConnection!]!
  field: String!
  fieldValue: String
}

input ContentDataSortInput {
  fields: [ContentDataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type CarAvailibilityConnection {
  totalCount: Int!
  edges: [CarAvailibilityEdge!]!
  nodes: [CarAvailibility!]!
  pageInfo: PageInfo!
  distinct(field: CarAvailibilityFieldsEnum!): [String!]!
  max(field: CarAvailibilityFieldsEnum!): Float
  min(field: CarAvailibilityFieldsEnum!): Float
  sum(field: CarAvailibilityFieldsEnum!): Float
  group(skip: Int, limit: Int, field: CarAvailibilityFieldsEnum!): [CarAvailibilityGroupConnection!]!
}

type CarAvailibilityEdge {
  next: CarAvailibility
  node: CarAvailibility!
  previous: CarAvailibility
}

enum CarAvailibilityFieldsEnum {
  parking1
  parking2
  parking3
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type CarAvailibilityGroupConnection {
  totalCount: Int!
  edges: [CarAvailibilityEdge!]!
  nodes: [CarAvailibility!]!
  pageInfo: PageInfo!
  distinct(field: CarAvailibilityFieldsEnum!): [String!]!
  max(field: CarAvailibilityFieldsEnum!): Float
  min(field: CarAvailibilityFieldsEnum!): Float
  sum(field: CarAvailibilityFieldsEnum!): Float
  group(skip: Int, limit: Int, field: CarAvailibilityFieldsEnum!): [CarAvailibilityGroupConnection!]!
  field: String!
  fieldValue: String
}

input CarAvailibilityFilterInput {
  parking1: StringQueryOperatorInput
  parking2: StringQueryOperatorInput
  parking3: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input CarAvailibilitySortInput {
  fields: [CarAvailibilityFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type BusAvailibilityConnection {
  totalCount: Int!
  edges: [BusAvailibilityEdge!]!
  nodes: [BusAvailibility!]!
  pageInfo: PageInfo!
  distinct(field: BusAvailibilityFieldsEnum!): [String!]!
  max(field: BusAvailibilityFieldsEnum!): Float
  min(field: BusAvailibilityFieldsEnum!): Float
  sum(field: BusAvailibilityFieldsEnum!): Float
  group(skip: Int, limit: Int, field: BusAvailibilityFieldsEnum!): [BusAvailibilityGroupConnection!]!
}

type BusAvailibilityEdge {
  next: BusAvailibility
  node: BusAvailibility!
  previous: BusAvailibility
}

enum BusAvailibilityFieldsEnum {
  stop1
  stop2
  stop3
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type BusAvailibilityGroupConnection {
  totalCount: Int!
  edges: [BusAvailibilityEdge!]!
  nodes: [BusAvailibility!]!
  pageInfo: PageInfo!
  distinct(field: BusAvailibilityFieldsEnum!): [String!]!
  max(field: BusAvailibilityFieldsEnum!): Float
  min(field: BusAvailibilityFieldsEnum!): Float
  sum(field: BusAvailibilityFieldsEnum!): Float
  group(skip: Int, limit: Int, field: BusAvailibilityFieldsEnum!): [BusAvailibilityGroupConnection!]!
  field: String!
  fieldValue: String
}

input BusAvailibilityFilterInput {
  stop1: StringQueryOperatorInput
  stop2: StringQueryOperatorInput
  stop3: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input BusAvailibilitySortInput {
  fields: [BusAvailibilityFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type TrainAvailibilityConnection {
  totalCount: Int!
  edges: [TrainAvailibilityEdge!]!
  nodes: [TrainAvailibility!]!
  pageInfo: PageInfo!
  distinct(field: TrainAvailibilityFieldsEnum!): [String!]!
  max(field: TrainAvailibilityFieldsEnum!): Float
  min(field: TrainAvailibilityFieldsEnum!): Float
  sum(field: TrainAvailibilityFieldsEnum!): Float
  group(skip: Int, limit: Int, field: TrainAvailibilityFieldsEnum!): [TrainAvailibilityGroupConnection!]!
}

type TrainAvailibilityEdge {
  next: TrainAvailibility
  node: TrainAvailibility!
  previous: TrainAvailibility
}

enum TrainAvailibilityFieldsEnum {
  station1
  station2
  station3
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type TrainAvailibilityGroupConnection {
  totalCount: Int!
  edges: [TrainAvailibilityEdge!]!
  nodes: [TrainAvailibility!]!
  pageInfo: PageInfo!
  distinct(field: TrainAvailibilityFieldsEnum!): [String!]!
  max(field: TrainAvailibilityFieldsEnum!): Float
  min(field: TrainAvailibilityFieldsEnum!): Float
  sum(field: TrainAvailibilityFieldsEnum!): Float
  group(skip: Int, limit: Int, field: TrainAvailibilityFieldsEnum!): [TrainAvailibilityGroupConnection!]!
  field: String!
  fieldValue: String
}

input TrainAvailibilityFilterInput {
  station1: StringQueryOperatorInput
  station2: StringQueryOperatorInput
  station3: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input TrainAvailibilitySortInput {
  fields: [TrainAvailibilityFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type CoordsConnection {
  totalCount: Int!
  edges: [CoordsEdge!]!
  nodes: [Coords!]!
  pageInfo: PageInfo!
  distinct(field: CoordsFieldsEnum!): [String!]!
  max(field: CoordsFieldsEnum!): Float
  min(field: CoordsFieldsEnum!): Float
  sum(field: CoordsFieldsEnum!): Float
  group(skip: Int, limit: Int, field: CoordsFieldsEnum!): [CoordsGroupConnection!]!
}

type CoordsEdge {
  next: Coords
  node: Coords!
  previous: Coords
}

enum CoordsFieldsEnum {
  lat1
  lng1
  lat2
  lng2
  lat3
  lng3
  lat4
  lng4
  lat5
  lng5
  lat6
  lng6
  lat7
  lng7
  lat8
  lng8
  lat9
  lng9
  lat10
  lng10
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type CoordsGroupConnection {
  totalCount: Int!
  edges: [CoordsEdge!]!
  nodes: [Coords!]!
  pageInfo: PageInfo!
  distinct(field: CoordsFieldsEnum!): [String!]!
  max(field: CoordsFieldsEnum!): Float
  min(field: CoordsFieldsEnum!): Float
  sum(field: CoordsFieldsEnum!): Float
  group(skip: Int, limit: Int, field: CoordsFieldsEnum!): [CoordsGroupConnection!]!
  field: String!
  fieldValue: String
}

input CoordsFilterInput {
  lat1: FloatQueryOperatorInput
  lng1: FloatQueryOperatorInput
  lat2: FloatQueryOperatorInput
  lng2: FloatQueryOperatorInput
  lat3: FloatQueryOperatorInput
  lng3: FloatQueryOperatorInput
  lat4: FloatQueryOperatorInput
  lng4: FloatQueryOperatorInput
  lat5: FloatQueryOperatorInput
  lng5: FloatQueryOperatorInput
  lat6: FloatQueryOperatorInput
  lng6: FloatQueryOperatorInput
  lat7: FloatQueryOperatorInput
  lng7: FloatQueryOperatorInput
  lat8: FloatQueryOperatorInput
  lng8: FloatQueryOperatorInput
  lat9: FloatQueryOperatorInput
  lng9: FloatQueryOperatorInput
  lat10: FloatQueryOperatorInput
  lng10: FloatQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input CoordsSortInput {
  fields: [CoordsFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type UploadFileConnection {
  totalCount: Int!
  edges: [UploadFileEdge!]!
  nodes: [UploadFile!]!
  pageInfo: PageInfo!
  distinct(field: UploadFileFieldsEnum!): [String!]!
  max(field: UploadFileFieldsEnum!): Float
  min(field: UploadFileFieldsEnum!): Float
  sum(field: UploadFileFieldsEnum!): Float
  group(skip: Int, limit: Int, field: UploadFileFieldsEnum!): [UploadFileGroupConnection!]!
}

type UploadFileEdge {
  next: UploadFile
  node: UploadFile!
  previous: UploadFile
}

enum UploadFileFieldsEnum {
  name
  alternativeText
  caption
  width
  height
  formats
  hash
  ext
  mime
  size
  url
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type UploadFileGroupConnection {
  totalCount: Int!
  edges: [UploadFileEdge!]!
  nodes: [UploadFile!]!
  pageInfo: PageInfo!
  distinct(field: UploadFileFieldsEnum!): [String!]!
  max(field: UploadFileFieldsEnum!): Float
  min(field: UploadFileFieldsEnum!): Float
  sum(field: UploadFileFieldsEnum!): Float
  group(skip: Int, limit: Int, field: UploadFileFieldsEnum!): [UploadFileGroupConnection!]!
  field: String!
  fieldValue: String
}

input UploadFileFilterInput {
  name: StringQueryOperatorInput
  alternativeText: StringQueryOperatorInput
  caption: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  formats: JSONQueryOperatorInput
  hash: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  mime: StringQueryOperatorInput
  size: FloatQueryOperatorInput
  url: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input UploadFileSortInput {
  fields: [UploadFileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type STRAPI__MEDIAConnection {
  totalCount: Int!
  edges: [STRAPI__MEDIAEdge!]!
  nodes: [STRAPI__MEDIA!]!
  pageInfo: PageInfo!
  distinct(field: STRAPI__MEDIAFieldsEnum!): [String!]!
  max(field: STRAPI__MEDIAFieldsEnum!): Float
  min(field: STRAPI__MEDIAFieldsEnum!): Float
  sum(field: STRAPI__MEDIAFieldsEnum!): Float
  group(skip: Int, limit: Int, field: STRAPI__MEDIAFieldsEnum!): [STRAPI__MEDIAGroupConnection!]!
}

type STRAPI__MEDIAEdge {
  next: STRAPI__MEDIA
  node: STRAPI__MEDIA!
  previous: STRAPI__MEDIA
}

enum STRAPI__MEDIAFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  alternativeText
  caption
  width
  height
  formats___large___ext
  formats___large___url
  formats___large___hash
  formats___large___mime
  formats___large___name
  formats___large___size
  formats___large___width
  formats___large___height
  formats___large___provider_metadata___public_id
  formats___large___provider_metadata___resource_type
  formats___small___ext
  formats___small___url
  formats___small___hash
  formats___small___mime
  formats___small___name
  formats___small___size
  formats___small___width
  formats___small___height
  formats___small___provider_metadata___public_id
  formats___small___provider_metadata___resource_type
  formats___medium___ext
  formats___medium___url
  formats___medium___hash
  formats___medium___mime
  formats___medium___name
  formats___medium___size
  formats___medium___width
  formats___medium___height
  formats___medium___provider_metadata___public_id
  formats___medium___provider_metadata___resource_type
  formats___thumbnail___ext
  formats___thumbnail___url
  formats___thumbnail___hash
  formats___thumbnail___mime
  formats___thumbnail___name
  formats___thumbnail___size
  formats___thumbnail___width
  formats___thumbnail___height
  formats___thumbnail___provider_metadata___public_id
  formats___thumbnail___provider_metadata___resource_type
  hash
  ext
  mime
  size
  url
  createdAt
  updatedAt
  localFile___sourceInstanceName
  localFile___absolutePath
  localFile___relativePath
  localFile___extension
  localFile___size
  localFile___prettySize
  localFile___modifiedTime
  localFile___accessTime
  localFile___changeTime
  localFile___birthTime
  localFile___root
  localFile___dir
  localFile___base
  localFile___ext
  localFile___name
  localFile___relativeDirectory
  localFile___dev
  localFile___mode
  localFile___nlink
  localFile___uid
  localFile___gid
  localFile___rdev
  localFile___ino
  localFile___atimeMs
  localFile___mtimeMs
  localFile___ctimeMs
  localFile___atime
  localFile___mtime
  localFile___ctime
  localFile___birthtime
  localFile___birthtimeMs
  localFile___blksize
  localFile___blocks
  localFile___url
  localFile___publicURL
  localFile___childrenImageSharp
  localFile___childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___original___width
  localFile___childrenImageSharp___original___height
  localFile___childrenImageSharp___original___src
  localFile___childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___id
  localFile___childrenImageSharp___parent___id
  localFile___childrenImageSharp___parent___children
  localFile___childrenImageSharp___children
  localFile___childrenImageSharp___children___id
  localFile___childrenImageSharp___children___children
  localFile___childrenImageSharp___internal___content
  localFile___childrenImageSharp___internal___contentDigest
  localFile___childrenImageSharp___internal___description
  localFile___childrenImageSharp___internal___fieldOwners
  localFile___childrenImageSharp___internal___ignoreType
  localFile___childrenImageSharp___internal___mediaType
  localFile___childrenImageSharp___internal___owner
  localFile___childrenImageSharp___internal___type
  localFile___childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___original___width
  localFile___childImageSharp___original___height
  localFile___childImageSharp___original___src
  localFile___childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___id
  localFile___childImageSharp___parent___id
  localFile___childImageSharp___parent___children
  localFile___childImageSharp___children
  localFile___childImageSharp___children___id
  localFile___childImageSharp___children___children
  localFile___childImageSharp___internal___content
  localFile___childImageSharp___internal___contentDigest
  localFile___childImageSharp___internal___description
  localFile___childImageSharp___internal___fieldOwners
  localFile___childImageSharp___internal___ignoreType
  localFile___childImageSharp___internal___mediaType
  localFile___childImageSharp___internal___owner
  localFile___childImageSharp___internal___type
  localFile___id
  localFile___parent___id
  localFile___parent___parent___id
  localFile___parent___parent___children
  localFile___parent___children
  localFile___parent___children___id
  localFile___parent___children___children
  localFile___parent___internal___content
  localFile___parent___internal___contentDigest
  localFile___parent___internal___description
  localFile___parent___internal___fieldOwners
  localFile___parent___internal___ignoreType
  localFile___parent___internal___mediaType
  localFile___parent___internal___owner
  localFile___parent___internal___type
  localFile___children
  localFile___children___id
  localFile___children___parent___id
  localFile___children___parent___children
  localFile___children___children
  localFile___children___children___id
  localFile___children___children___children
  localFile___children___internal___content
  localFile___children___internal___contentDigest
  localFile___children___internal___description
  localFile___children___internal___fieldOwners
  localFile___children___internal___ignoreType
  localFile___children___internal___mediaType
  localFile___children___internal___owner
  localFile___children___internal___type
  localFile___internal___content
  localFile___internal___contentDigest
  localFile___internal___description
  localFile___internal___fieldOwners
  localFile___internal___ignoreType
  localFile___internal___mediaType
  localFile___internal___owner
  localFile___internal___type
  strapi_id
}

type STRAPI__MEDIAGroupConnection {
  totalCount: Int!
  edges: [STRAPI__MEDIAEdge!]!
  nodes: [STRAPI__MEDIA!]!
  pageInfo: PageInfo!
  distinct(field: STRAPI__MEDIAFieldsEnum!): [String!]!
  max(field: STRAPI__MEDIAFieldsEnum!): Float
  min(field: STRAPI__MEDIAFieldsEnum!): Float
  sum(field: STRAPI__MEDIAFieldsEnum!): Float
  group(skip: Int, limit: Int, field: STRAPI__MEDIAFieldsEnum!): [STRAPI__MEDIAGroupConnection!]!
  field: String!
  fieldValue: String
}

input STRAPI__MEDIASortInput {
  fields: [STRAPI__MEDIAFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type STRAPI__COMPONENT_COORDS_COORDSConnection {
  totalCount: Int!
  edges: [STRAPI__COMPONENT_COORDS_COORDSEdge!]!
  nodes: [STRAPI__COMPONENT_COORDS_COORDS!]!
  pageInfo: PageInfo!
  distinct(field: STRAPI__COMPONENT_COORDS_COORDSFieldsEnum!): [String!]!
  max(field: STRAPI__COMPONENT_COORDS_COORDSFieldsEnum!): Float
  min(field: STRAPI__COMPONENT_COORDS_COORDSFieldsEnum!): Float
  sum(field: STRAPI__COMPONENT_COORDS_COORDSFieldsEnum!): Float
  group(skip: Int, limit: Int, field: STRAPI__COMPONENT_COORDS_COORDSFieldsEnum!): [STRAPI__COMPONENT_COORDS_COORDSGroupConnection!]!
}

type STRAPI__COMPONENT_COORDS_COORDSEdge {
  next: STRAPI__COMPONENT_COORDS_COORDS
  node: STRAPI__COMPONENT_COORDS_COORDS!
  previous: STRAPI__COMPONENT_COORDS_COORDS
}

enum STRAPI__COMPONENT_COORDS_COORDSFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  lat1
  lat2
  lng1
  lng2
  strapi_id
}

type STRAPI__COMPONENT_COORDS_COORDSGroupConnection {
  totalCount: Int!
  edges: [STRAPI__COMPONENT_COORDS_COORDSEdge!]!
  nodes: [STRAPI__COMPONENT_COORDS_COORDS!]!
  pageInfo: PageInfo!
  distinct(field: STRAPI__COMPONENT_COORDS_COORDSFieldsEnum!): [String!]!
  max(field: STRAPI__COMPONENT_COORDS_COORDSFieldsEnum!): Float
  min(field: STRAPI__COMPONENT_COORDS_COORDSFieldsEnum!): Float
  sum(field: STRAPI__COMPONENT_COORDS_COORDSFieldsEnum!): Float
  group(skip: Int, limit: Int, field: STRAPI__COMPONENT_COORDS_COORDSFieldsEnum!): [STRAPI__COMPONENT_COORDS_COORDSGroupConnection!]!
  field: String!
  fieldValue: String
}

input STRAPI__COMPONENT_COORDS_COORDSSortInput {
  fields: [STRAPI__COMPONENT_COORDS_COORDSFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINConnection {
  totalCount: Int!
  edges: [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINEdge!]!
  nodes: [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAIN!]!
  pageInfo: PageInfo!
  distinct(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFieldsEnum!): [String!]!
  max(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFieldsEnum!): Float
  min(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFieldsEnum!): Float
  sum(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFieldsEnum!): Float
  group(skip: Int, limit: Int, field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFieldsEnum!): [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINGroupConnection!]!
}

type STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINEdge {
  next: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAIN
  node: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAIN!
  previous: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAIN
}

enum STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  station1
  station2
  station3
  strapi_id
}

type STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINGroupConnection {
  totalCount: Int!
  edges: [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINEdge!]!
  nodes: [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAIN!]!
  pageInfo: PageInfo!
  distinct(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFieldsEnum!): [String!]!
  max(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFieldsEnum!): Float
  min(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFieldsEnum!): Float
  sum(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFieldsEnum!): Float
  group(skip: Int, limit: Int, field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFieldsEnum!): [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINGroupConnection!]!
  field: String!
  fieldValue: String
}

input STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINSortInput {
  fields: [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAINFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARConnection {
  totalCount: Int!
  edges: [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CAREdge!]!
  nodes: [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CAR!]!
  pageInfo: PageInfo!
  distinct(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFieldsEnum!): [String!]!
  max(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFieldsEnum!): Float
  min(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFieldsEnum!): Float
  sum(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFieldsEnum!): Float
  group(skip: Int, limit: Int, field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFieldsEnum!): [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARGroupConnection!]!
}

type STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CAREdge {
  next: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CAR
  node: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CAR!
  previous: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CAR
}

enum STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parking1
  parking2
  parking3
  strapi_id
}

type STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARGroupConnection {
  totalCount: Int!
  edges: [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CAREdge!]!
  nodes: [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CAR!]!
  pageInfo: PageInfo!
  distinct(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFieldsEnum!): [String!]!
  max(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFieldsEnum!): Float
  min(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFieldsEnum!): Float
  sum(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFieldsEnum!): Float
  group(skip: Int, limit: Int, field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFieldsEnum!): [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARGroupConnection!]!
  field: String!
  fieldValue: String
}

input STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARSortInput {
  fields: [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CARFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSConnection {
  totalCount: Int!
  edges: [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSEdge!]!
  nodes: [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUS!]!
  pageInfo: PageInfo!
  distinct(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFieldsEnum!): [String!]!
  max(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFieldsEnum!): Float
  min(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFieldsEnum!): Float
  sum(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFieldsEnum!): Float
  group(skip: Int, limit: Int, field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFieldsEnum!): [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSGroupConnection!]!
}

type STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSEdge {
  next: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUS
  node: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUS!
  previous: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUS
}

enum STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  stop1
  stop2
  stop3
  strapi_id
}

type STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSGroupConnection {
  totalCount: Int!
  edges: [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSEdge!]!
  nodes: [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUS!]!
  pageInfo: PageInfo!
  distinct(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFieldsEnum!): [String!]!
  max(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFieldsEnum!): Float
  min(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFieldsEnum!): Float
  sum(field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFieldsEnum!): Float
  group(skip: Int, limit: Int, field: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFieldsEnum!): [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSGroupConnection!]!
  field: String!
  fieldValue: String
}

input STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSSortInput {
  fields: [STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUSFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type STRAPI_TRAIL_CONTENT_TEXTNODEConnection {
  totalCount: Int!
  edges: [STRAPI_TRAIL_CONTENT_TEXTNODEEdge!]!
  nodes: [STRAPI_TRAIL_CONTENT_TEXTNODE!]!
  pageInfo: PageInfo!
  distinct(field: STRAPI_TRAIL_CONTENT_TEXTNODEFieldsEnum!): [String!]!
  max(field: STRAPI_TRAIL_CONTENT_TEXTNODEFieldsEnum!): Float
  min(field: STRAPI_TRAIL_CONTENT_TEXTNODEFieldsEnum!): Float
  sum(field: STRAPI_TRAIL_CONTENT_TEXTNODEFieldsEnum!): Float
  group(skip: Int, limit: Int, field: STRAPI_TRAIL_CONTENT_TEXTNODEFieldsEnum!): [STRAPI_TRAIL_CONTENT_TEXTNODEGroupConnection!]!
}

type STRAPI_TRAIL_CONTENT_TEXTNODEEdge {
  next: STRAPI_TRAIL_CONTENT_TEXTNODE
  node: STRAPI_TRAIL_CONTENT_TEXTNODE!
  previous: STRAPI_TRAIL_CONTENT_TEXTNODE
}

enum STRAPI_TRAIL_CONTENT_TEXTNODEFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  content
}

type STRAPI_TRAIL_CONTENT_TEXTNODEGroupConnection {
  totalCount: Int!
  edges: [STRAPI_TRAIL_CONTENT_TEXTNODEEdge!]!
  nodes: [STRAPI_TRAIL_CONTENT_TEXTNODE!]!
  pageInfo: PageInfo!
  distinct(field: STRAPI_TRAIL_CONTENT_TEXTNODEFieldsEnum!): [String!]!
  max(field: STRAPI_TRAIL_CONTENT_TEXTNODEFieldsEnum!): Float
  min(field: STRAPI_TRAIL_CONTENT_TEXTNODEFieldsEnum!): Float
  sum(field: STRAPI_TRAIL_CONTENT_TEXTNODEFieldsEnum!): Float
  group(skip: Int, limit: Int, field: STRAPI_TRAIL_CONTENT_TEXTNODEFieldsEnum!): [STRAPI_TRAIL_CONTENT_TEXTNODEGroupConnection!]!
  field: String!
  fieldValue: String
}

input STRAPI_TRAIL_CONTENT_TEXTNODESortInput {
  fields: [STRAPI_TRAIL_CONTENT_TEXTNODEFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input InstagramContentAlbumFilterListInput {
  elemMatch: InstagramContentAlbumFilterInput
}

input InstagramContentAlbumFilterInput {
  id: StringQueryOperatorInput
  media_url: StringQueryOperatorInput
  media_type: StringQueryOperatorInput
  timestamp: DateQueryOperatorInput
  localImage: FileFilterInput
  localFile: FileFilterInput
}

type InstagramContentConnection {
  totalCount: Int!
  edges: [InstagramContentEdge!]!
  nodes: [InstagramContent!]!
  pageInfo: PageInfo!
  distinct(field: InstagramContentFieldsEnum!): [String!]!
  max(field: InstagramContentFieldsEnum!): Float
  min(field: InstagramContentFieldsEnum!): Float
  sum(field: InstagramContentFieldsEnum!): Float
  group(skip: Int, limit: Int, field: InstagramContentFieldsEnum!): [InstagramContentGroupConnection!]!
}

type InstagramContentEdge {
  next: InstagramContent
  node: InstagramContent!
  previous: InstagramContent
}

enum InstagramContentFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  media_url
  media_type
  permalink
  timestamp
  caption
  username
  album
  album___id
  album___media_url
  album___media_type
  album___timestamp
  album___localImage___sourceInstanceName
  album___localImage___absolutePath
  album___localImage___relativePath
  album___localImage___extension
  album___localImage___size
  album___localImage___prettySize
  album___localImage___modifiedTime
  album___localImage___accessTime
  album___localImage___changeTime
  album___localImage___birthTime
  album___localImage___root
  album___localImage___dir
  album___localImage___base
  album___localImage___ext
  album___localImage___name
  album___localImage___relativeDirectory
  album___localImage___dev
  album___localImage___mode
  album___localImage___nlink
  album___localImage___uid
  album___localImage___gid
  album___localImage___rdev
  album___localImage___ino
  album___localImage___atimeMs
  album___localImage___mtimeMs
  album___localImage___ctimeMs
  album___localImage___atime
  album___localImage___mtime
  album___localImage___ctime
  album___localImage___birthtime
  album___localImage___birthtimeMs
  album___localImage___blksize
  album___localImage___blocks
  album___localImage___url
  album___localImage___publicURL
  album___localImage___childrenImageSharp
  album___localImage___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  album___localImage___childrenImageSharp___id
  album___localImage___childrenImageSharp___children
  album___localImage___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  album___localImage___childImageSharp___id
  album___localImage___childImageSharp___children
  album___localImage___id
  album___localImage___parent___id
  album___localImage___parent___children
  album___localImage___children
  album___localImage___children___id
  album___localImage___children___children
  album___localImage___internal___content
  album___localImage___internal___contentDigest
  album___localImage___internal___description
  album___localImage___internal___fieldOwners
  album___localImage___internal___ignoreType
  album___localImage___internal___mediaType
  album___localImage___internal___owner
  album___localImage___internal___type
  album___localFile___sourceInstanceName
  album___localFile___absolutePath
  album___localFile___relativePath
  album___localFile___extension
  album___localFile___size
  album___localFile___prettySize
  album___localFile___modifiedTime
  album___localFile___accessTime
  album___localFile___changeTime
  album___localFile___birthTime
  album___localFile___root
  album___localFile___dir
  album___localFile___base
  album___localFile___ext
  album___localFile___name
  album___localFile___relativeDirectory
  album___localFile___dev
  album___localFile___mode
  album___localFile___nlink
  album___localFile___uid
  album___localFile___gid
  album___localFile___rdev
  album___localFile___ino
  album___localFile___atimeMs
  album___localFile___mtimeMs
  album___localFile___ctimeMs
  album___localFile___atime
  album___localFile___mtime
  album___localFile___ctime
  album___localFile___birthtime
  album___localFile___birthtimeMs
  album___localFile___blksize
  album___localFile___blocks
  album___localFile___url
  album___localFile___publicURL
  album___localFile___childrenImageSharp
  album___localFile___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  album___localFile___childrenImageSharp___id
  album___localFile___childrenImageSharp___children
  album___localFile___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  album___localFile___childImageSharp___id
  album___localFile___childImageSharp___children
  album___localFile___id
  album___localFile___parent___id
  album___localFile___parent___children
  album___localFile___children
  album___localFile___children___id
  album___localFile___children___children
  album___localFile___internal___content
  album___localFile___internal___contentDigest
  album___localFile___internal___description
  album___localFile___internal___fieldOwners
  album___localFile___internal___ignoreType
  album___localFile___internal___mediaType
  album___localFile___internal___owner
  album___localFile___internal___type
  media_id
  localImage___sourceInstanceName
  localImage___absolutePath
  localImage___relativePath
  localImage___extension
  localImage___size
  localImage___prettySize
  localImage___modifiedTime
  localImage___accessTime
  localImage___changeTime
  localImage___birthTime
  localImage___root
  localImage___dir
  localImage___base
  localImage___ext
  localImage___name
  localImage___relativeDirectory
  localImage___dev
  localImage___mode
  localImage___nlink
  localImage___uid
  localImage___gid
  localImage___rdev
  localImage___ino
  localImage___atimeMs
  localImage___mtimeMs
  localImage___ctimeMs
  localImage___atime
  localImage___mtime
  localImage___ctime
  localImage___birthtime
  localImage___birthtimeMs
  localImage___blksize
  localImage___blocks
  localImage___url
  localImage___publicURL
  localImage___childrenImageSharp
  localImage___childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___original___width
  localImage___childrenImageSharp___original___height
  localImage___childrenImageSharp___original___src
  localImage___childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childrenImageSharp___id
  localImage___childrenImageSharp___parent___id
  localImage___childrenImageSharp___parent___children
  localImage___childrenImageSharp___children
  localImage___childrenImageSharp___children___id
  localImage___childrenImageSharp___children___children
  localImage___childrenImageSharp___internal___content
  localImage___childrenImageSharp___internal___contentDigest
  localImage___childrenImageSharp___internal___description
  localImage___childrenImageSharp___internal___fieldOwners
  localImage___childrenImageSharp___internal___ignoreType
  localImage___childrenImageSharp___internal___mediaType
  localImage___childrenImageSharp___internal___owner
  localImage___childrenImageSharp___internal___type
  localImage___childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___original___width
  localImage___childImageSharp___original___height
  localImage___childImageSharp___original___src
  localImage___childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localImage___childImageSharp___id
  localImage___childImageSharp___parent___id
  localImage___childImageSharp___parent___children
  localImage___childImageSharp___children
  localImage___childImageSharp___children___id
  localImage___childImageSharp___children___children
  localImage___childImageSharp___internal___content
  localImage___childImageSharp___internal___contentDigest
  localImage___childImageSharp___internal___description
  localImage___childImageSharp___internal___fieldOwners
  localImage___childImageSharp___internal___ignoreType
  localImage___childImageSharp___internal___mediaType
  localImage___childImageSharp___internal___owner
  localImage___childImageSharp___internal___type
  localImage___id
  localImage___parent___id
  localImage___parent___parent___id
  localImage___parent___parent___children
  localImage___parent___children
  localImage___parent___children___id
  localImage___parent___children___children
  localImage___parent___internal___content
  localImage___parent___internal___contentDigest
  localImage___parent___internal___description
  localImage___parent___internal___fieldOwners
  localImage___parent___internal___ignoreType
  localImage___parent___internal___mediaType
  localImage___parent___internal___owner
  localImage___parent___internal___type
  localImage___children
  localImage___children___id
  localImage___children___parent___id
  localImage___children___parent___children
  localImage___children___children
  localImage___children___children___id
  localImage___children___children___children
  localImage___children___internal___content
  localImage___children___internal___contentDigest
  localImage___children___internal___description
  localImage___children___internal___fieldOwners
  localImage___children___internal___ignoreType
  localImage___children___internal___mediaType
  localImage___children___internal___owner
  localImage___children___internal___type
  localImage___internal___content
  localImage___internal___contentDigest
  localImage___internal___description
  localImage___internal___fieldOwners
  localImage___internal___ignoreType
  localImage___internal___mediaType
  localImage___internal___owner
  localImage___internal___type
  localFile___sourceInstanceName
  localFile___absolutePath
  localFile___relativePath
  localFile___extension
  localFile___size
  localFile___prettySize
  localFile___modifiedTime
  localFile___accessTime
  localFile___changeTime
  localFile___birthTime
  localFile___root
  localFile___dir
  localFile___base
  localFile___ext
  localFile___name
  localFile___relativeDirectory
  localFile___dev
  localFile___mode
  localFile___nlink
  localFile___uid
  localFile___gid
  localFile___rdev
  localFile___ino
  localFile___atimeMs
  localFile___mtimeMs
  localFile___ctimeMs
  localFile___atime
  localFile___mtime
  localFile___ctime
  localFile___birthtime
  localFile___birthtimeMs
  localFile___blksize
  localFile___blocks
  localFile___url
  localFile___publicURL
  localFile___childrenImageSharp
  localFile___childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___original___width
  localFile___childrenImageSharp___original___height
  localFile___childrenImageSharp___original___src
  localFile___childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___id
  localFile___childrenImageSharp___parent___id
  localFile___childrenImageSharp___parent___children
  localFile___childrenImageSharp___children
  localFile___childrenImageSharp___children___id
  localFile___childrenImageSharp___children___children
  localFile___childrenImageSharp___internal___content
  localFile___childrenImageSharp___internal___contentDigest
  localFile___childrenImageSharp___internal___description
  localFile___childrenImageSharp___internal___fieldOwners
  localFile___childrenImageSharp___internal___ignoreType
  localFile___childrenImageSharp___internal___mediaType
  localFile___childrenImageSharp___internal___owner
  localFile___childrenImageSharp___internal___type
  localFile___childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___original___width
  localFile___childImageSharp___original___height
  localFile___childImageSharp___original___src
  localFile___childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___id
  localFile___childImageSharp___parent___id
  localFile___childImageSharp___parent___children
  localFile___childImageSharp___children
  localFile___childImageSharp___children___id
  localFile___childImageSharp___children___children
  localFile___childImageSharp___internal___content
  localFile___childImageSharp___internal___contentDigest
  localFile___childImageSharp___internal___description
  localFile___childImageSharp___internal___fieldOwners
  localFile___childImageSharp___internal___ignoreType
  localFile___childImageSharp___internal___mediaType
  localFile___childImageSharp___internal___owner
  localFile___childImageSharp___internal___type
  localFile___id
  localFile___parent___id
  localFile___parent___parent___id
  localFile___parent___parent___children
  localFile___parent___children
  localFile___parent___children___id
  localFile___parent___children___children
  localFile___parent___internal___content
  localFile___parent___internal___contentDigest
  localFile___parent___internal___description
  localFile___parent___internal___fieldOwners
  localFile___parent___internal___ignoreType
  localFile___parent___internal___mediaType
  localFile___parent___internal___owner
  localFile___parent___internal___type
  localFile___children
  localFile___children___id
  localFile___children___parent___id
  localFile___children___parent___children
  localFile___children___children
  localFile___children___children___id
  localFile___children___children___children
  localFile___children___internal___content
  localFile___children___internal___contentDigest
  localFile___children___internal___description
  localFile___children___internal___fieldOwners
  localFile___children___internal___ignoreType
  localFile___children___internal___mediaType
  localFile___children___internal___owner
  localFile___children___internal___type
  localFile___internal___content
  localFile___internal___contentDigest
  localFile___internal___description
  localFile___internal___fieldOwners
  localFile___internal___ignoreType
  localFile___internal___mediaType
  localFile___internal___owner
  localFile___internal___type
}

type InstagramContentGroupConnection {
  totalCount: Int!
  edges: [InstagramContentEdge!]!
  nodes: [InstagramContent!]!
  pageInfo: PageInfo!
  distinct(field: InstagramContentFieldsEnum!): [String!]!
  max(field: InstagramContentFieldsEnum!): Float
  min(field: InstagramContentFieldsEnum!): Float
  sum(field: InstagramContentFieldsEnum!): Float
  group(skip: Int, limit: Int, field: InstagramContentFieldsEnum!): [InstagramContentGroupConnection!]!
  field: String!
  fieldValue: String
}

input InstagramContentFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  media_url: StringQueryOperatorInput
  media_type: StringQueryOperatorInput
  permalink: StringQueryOperatorInput
  timestamp: DateQueryOperatorInput
  caption: StringQueryOperatorInput
  username: StringQueryOperatorInput
  album: InstagramContentAlbumFilterListInput
  media_id: StringQueryOperatorInput
  localImage: FileFilterInput
  localFile: FileFilterInput
}

input InstagramContentSortInput {
  fields: [InstagramContentFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type StrapiTrail implements Node {
  slug: String
  title: String
  trail_type: ENUM_TRAIL_TRAIL_TYPE!
  criterion: ENUM_TRAIL_CRITERION
  availability_car: CarAvailibility!
  availability_bus: BusAvailibility!
  availability_train: TrainAvailibility!
  content: Content!
  coords: Coords!
  train: TrainAvailibility!
  cover_image: UploadFile
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

enum ENUM_TRAIL_TRAIL_TYPE {
  aa
  ab
}

enum ENUM_TRAIL_CRITERION {
  fast
  short
  bike1
  bike2
  bike3
  turist1
  turist2
}

type Content implements Node {
  data: ContentData
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type ContentData implements Node {
  content: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type CarAvailibility implements Node {
  parking1: String
  parking2: String
  parking3: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type BusAvailibility implements Node {
  stop1: String
  stop2: String
  stop3: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type TrainAvailibility implements Node {
  station1: String
  station2: String
  station3: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Coords implements Node {
  lat1: Float!
  lng1: Float!
  lat2: Float!
  lng2: Float!
  lat3: Float!
  lng3: Float!
  lat4: Float!
  lng4: Float!
  lat5: Float!
  lng5: Float!
  lat6: Float!
  lng6: Float!
  lat7: Float!
  lng7: Float!
  lat8: Float!
  lng8: Float!
  lat9: Float!
  lng9: Float!
  lat10: Float!
  lng10: Float!
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type UploadFile implements Node {
  name: String!
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: JSON
  hash: String!
  ext: String
  mime: String!
  size: Float!
  url: String!
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type STRAPI__MEDIA implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  name: String
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: STRAPI__MEDIAFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  createdAt(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  updatedAt(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  localFile: File
  strapi_id: Int
}

type STRAPI__MEDIAFormats {
  large: STRAPI__MEDIAFormatsLarge
  small: STRAPI__MEDIAFormatsSmall
  medium: STRAPI__MEDIAFormatsMedium
  thumbnail: STRAPI__MEDIAFormatsThumbnail
}

type STRAPI__MEDIAFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
  provider_metadata: STRAPI__MEDIAFormatsLargeProvider_metadata
}

type STRAPI__MEDIAFormatsLargeProvider_metadata {
  public_id: String
  resource_type: String
}

type STRAPI__MEDIAFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
  provider_metadata: STRAPI__MEDIAFormatsSmallProvider_metadata
}

type STRAPI__MEDIAFormatsSmallProvider_metadata {
  public_id: String
  resource_type: String
}

type STRAPI__MEDIAFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
  provider_metadata: STRAPI__MEDIAFormatsMediumProvider_metadata
}

type STRAPI__MEDIAFormatsMediumProvider_metadata {
  public_id: String
  resource_type: String
}

type STRAPI__MEDIAFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
  provider_metadata: STRAPI__MEDIAFormatsThumbnailProvider_metadata
}

type STRAPI__MEDIAFormatsThumbnailProvider_metadata {
  public_id: String
  resource_type: String
}

type STRAPI__COMPONENT_COORDS_COORDS implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  lat1: Float
  lat2: Float
  lng1: Float
  lng2: Float
  strapi_id: Int
}

type STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAIN implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  station1: String
  station2: String
  station3: String
  strapi_id: Int
}

type STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CAR implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  parking1: String
  parking2: String
  parking3: String
  strapi_id: Int
}

type STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUS implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  stop1: String
  stop2: String
  stop3: String
  strapi_id: Int
}

type STRAPI_TRAIL_CONTENT_TEXTNODE implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  content: String
}

type STRAPI_TRAIL implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  title: String
  content: STRAPI_TRAILContent
  criterion: String
  trail_type: String
  slug: String
  createdAt(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  updatedAt(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  publishedAt(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  cover_image: STRAPI__MEDIA
  bus: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_BUS
  car: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_CAR
  train: STRAPI__COMPONENT_AVAILABILITY_AVAILABILITY_TRAIN
  coords: STRAPI__COMPONENT_COORDS_COORDS
  strapi_id: Int

  # Returns all children nodes filtered by type STRAPI_TRAIL_CONTENT_TEXTNODE
  childrenStrapiTrailContentTextnode: [STRAPI_TRAIL_CONTENT_TEXTNODE]

  # Returns the first child node of type STRAPI_TRAIL_CONTENT_TEXTNODE or null if there are no children of given type on this node
  childStrapiTrailContentTextnode: STRAPI_TRAIL_CONTENT_TEXTNODE
}

type STRAPI_TRAILContent {
  data: STRAPI_TRAIL_CONTENT_TEXTNODE
}

type InstagramContent implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  media_url: String
  media_type: String
  permalink: String
  timestamp(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  caption: String
  username: String
  album: [InstagramContentAlbum]
  media_id: String
  localImage: File
  localFile: File
}

type InstagramContentAlbum {
  id: String
  media_url: String
  media_type: String
  timestamp(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  localImage: File
  localFile: File
}
